version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: uesgaming-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: svtkvt
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - uesgaming-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: uesgaming-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - uesgaming-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: uesgaming-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    networks:
      - uesgaming-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: uesgaming-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/svtkvt
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESSKEY: minioadmin
      MINIO_SECRETKEY: minioadmin
      MINIO_BUCKETNAME: uesgaming
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - uesgaming-network
    restart: on-failure

networks:
  uesgaming-network:
    driver: bridge

volumes:
  mysql-data:
  elasticsearch-data:
  minio-data:
